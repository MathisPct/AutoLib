@inject NavigationManager NavigationManager;

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthTask;
        
        if(authState?.User?.Identity is null || !authState.User.Identity.IsAuthenticated)
        {
            var returnUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
            
            if(string.IsNullOrWhiteSpace(returnUrl)) 
                NavigationManager.NavigateTo("/login", true);
            else 
                NavigationManager.NavigateTo($"/login?returnUrl={returnUrl}", true);
        }
        
    }

}