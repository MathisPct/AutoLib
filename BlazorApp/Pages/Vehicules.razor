@attribute [Authorize]
@page "/vehicules"
@using BlazorApp.Services
@using BlazorApp.Models.Domain
@inject VehiculeService VehiculeService
@inject IJSRuntime JSRuntime
@inject IToastService toastService

<h1>Vehicules</h1>

<table>
    <thead>
    <tr>
        <th>Borne</th>
        <th>Véhicule</th>
        <th>Catégorie</th>
        <th>Batterie</th>
        <th>Disponibilité</th>
        <th>Réserver</th>
    </tr>
    </thead>
    <tbody>
    @foreach (Vehicule vehicule in VehiculeService.VehiculesAReserver())
    {
        <tr>
            <td>@(vehicule.Bornes.ToArray()[0].IdBorne)</td>
            <td>@(vehicule.TypeVehiculeNavigation.Name)</td>
            <td>@(vehicule.TypeVehiculeNavigation.Categorie)</td>
            <td>@(vehicule.EtatBatterie)</td>
            <td>@(vehicule.Disponibilite)</td>
            <td>
                <button class="btn btn-primary" @onclick="() => OpenReservationModal(vehicule)">
                    Réserver
                </button>
            </td>
        </tr>
    }
    </tbody>
</table>

<ModalReservation SelectedVehicule="SelectedVehicle" ModalId="reservationModal" Title="Réservation" FinishReservation="ConfirmReservation">
    <p>Voulez-vous réserver le véhicule @SelectedVehicle?.TypeVehiculeNavigation.Name ?</p>
</ModalReservation>

@code {
    Vehicule SelectedVehicle { get; set; }

    private async void OpenReservationModal(Vehicule vehicule)
    {
        SelectedVehicle = vehicule;
        await JSRuntime.InvokeVoidAsync("blazorHelpers.openModal", "reservationModal");
    }

    private async Task ConfirmReservation()
    {
        toastService.ShowSuccess("Réservation effectuée avec succès");
    }
}