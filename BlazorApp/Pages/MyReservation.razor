@attribute [Authorize]
@page "/myreservation"
@using BlazorApp.Services
@using Microsoft.AspNetCore.Identity
@using BlazorApp.Models.Domain
@inject ReservationService ReservationService;
@inject UserManager<Client> UserManager
@inject SignInManager<Client> SignInManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<h1>Mes réservations</h1>
@if (_errorMessage == null)
{
    <table>
        <thead>
        <th>Date de début</th>
        <th>Date échéance</th>
        <th>Véhicule</th>
        </thead>
    
        <tbody>
        @foreach (var reservation in _reservations)
        {
            <tr>
                <td>@reservation.DateReservation</td>
                <td>@reservation.DateEcheance</td>
                <td>@reservation.Vehicule.TypeVehiculeNavigation.Name</td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-danger mt-3" role="alert">
        @_errorMessage
    </div>
}

@code {
    private string? _errorMessage;
    private List<Reservation> _reservations;
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var userIdentity = authState.User.Identity ?? throw new Exception("Vous n'êtes pas connecté");
            var clientConnected = UserManager.Users.FirstOrDefault(u => u.UserName == userIdentity.Name);
            if(clientConnected == null) throw new Exception("Vous n'êtes pas connecté");
            this._reservations = ReservationService.Reservations(clientConnected);
        }
        catch (Exception e)
        {
            _errorMessage = e.Message;
        }
    }
}